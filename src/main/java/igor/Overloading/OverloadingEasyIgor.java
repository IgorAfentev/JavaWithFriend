/*–ó–∞–¥–∞–Ω–∏–µ:
    –°–æ–∑–¥–∞–π—Ç–µ –¥–≤–∞ –º–µ—Ç–æ–¥–∞ print(): –æ–¥–∏–Ω –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É, –≤—Ç–æ—Ä–æ–π ‚Äì —á–∏—Å–ª–æ
 */

//–ú–æ—ë —Ä–µ—à–µ–Ω–∏–µ
package igor.Overloading;
import java.util.Scanner;

public class OverloadingEasyIgor {

    public static void main(String[] args) {
        try(Scanner scanner = new Scanner(System.in)) {
            String someString = "–ü—Ä–∏–≤–µ—Ç! –Ø —Å—Ç—Ä–æ–∫–∞!";
            int someInt = 23;
            System.out.println(print(someString));
            System.out.println(print(someInt));
        }
    }

    static String print(String phrase) {
        return phrase;
    }

    static int print(int number) {
        return number;
    }
}

//–†–µ—à–µ–Ω–∏–µ ChatGPT
class OverloadingEasyIgorChat {

    public static void main(String[] args) {
        try (Scanner scanner = new Scanner(System.in)) {
            String someString = "–ü—Ä–∏–≤–µ—Ç! –Ø —Å—Ç—Ä–æ–∫–∞!";
            int someInt = 23;

            print(someString);
            print(someInt);
        }
    }

    static void print(String phrase) {
        System.out.println(phrase);
    }

    static void print(int number) {
        System.out.println(number);
    }
}

/*
üîπ –ß—Ç–æ –±—ã–ª–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ?:
‚úÖ –ú–µ—Ç–æ–¥—ã print() —Ç–µ–ø–µ—Ä—å void, –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω–∏ –ø—Ä–æ—Å—Ç–æ –≤—ã–≤–æ–¥—è—Ç –¥–∞–Ω–Ω—ã–µ, –∞ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –∏—Ö
‚úÖ –í main –±–æ–ª—å—à–µ –Ω–µ—Ç System.out.println(print(...)), —Ç–µ–ø–µ—Ä—å –ø—Ä–æ—Å—Ç–æ print(...)
 */