/* –ó–∞–¥–∞–Ω–∏–µ:
    –ù–∞–ø–∏—à–∏—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç—Ä–∏ —á–∏—Å–ª–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ö —Å—Ä–µ–¥–Ω–µ–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–µ
 */

//–ú–æ—ë —Ä–µ—à–µ–Ω–∏–µ
package igor.MethodsParameters;
import java.util.Scanner;

public class MethodsParametersMediumIgor {

    public static void main(String[] args) {
        try {
            System.out.printf("–°—Ä–µ–¥–Ω–µ–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–µ —ç—Ç–∏—Ö —á–∏—Å–µ–ª: %.2f", arithmeticMean());
        } catch (Exception e) {
            throw new RuntimeException(e);
        }
    }

    static float arithmeticMean() {
        Scanner scanner = new Scanner(System.in);

        System.out.println("–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ: ");
        while (!scanner.hasNextInt()) {
            System.out.println("–û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ: ");
            scanner.next();
        }
        int num1 = scanner.nextInt();
        System.out.println("–í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ: ");
        while (!scanner.hasNextInt()) {
            System.out.println("–û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ: ");
            scanner.next();
        }
        int num2 = scanner.nextInt();
        System.out.println("–í–≤–µ–¥–∏—Ç–µ —Ç—Ä–µ—Ç—å–µ —á–∏—Å–ª–æ: ");
        while (!scanner.hasNextInt()) {
            System.out.println("–û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ: ");
            scanner.next();
        }
        int num3 = scanner.nextInt();

        return (float) (num1 + num2 + num3) / 3;

    }
}

//–†–µ—à–µ–Ω–∏–µ ChatGPT
class MethodsParametersMediumIgorChat {

    public static void main(String[] args) {
        try (Scanner scanner = new Scanner(System.in)) {
            // –ü–æ–ª—É—á–∞–µ–º —á–∏—Å–ª–∞ —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π
            int num1 = getValidNumber(scanner, "–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ: ");
            int num2 = getValidNumber(scanner, "–í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ: ");
            int num3 = getValidNumber(scanner, "–í–≤–µ–¥–∏—Ç–µ —Ç—Ä–µ—Ç—å–µ —á–∏—Å–ª–æ: ");

            // –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ –∏ –≤—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            System.out.printf("–°—Ä–µ–¥–Ω–µ–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–µ: %.2f%n", arithmeticMean(num1, num2, num3));
        }
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–∏—Å–ª–∞
    private static int getValidNumber(Scanner scanner, String message) {
        System.out.print(message);
        while (!scanner.hasNextInt()) {
            System.out.print("–û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ: ");
            scanner.next(); // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥
        }
        return scanner.nextInt();
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Å—Ä–µ–¥–Ω–µ–≥–æ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ
    static float arithmeticMean(int num1, int num2, int num3) {
        return (num1 + num2 + num3) / 3.0f;
    }
}

/*
üîπ –ß—Ç–æ –±—ã–ª–æ —É–ª—É—á—à–µ–Ω–æ?:
‚úÖ –ú–µ—Ç–æ–¥ arithmeticMean() —Ç–µ–ø–µ—Ä—å –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–æ Scanner.
‚úÖ –î–æ–±–∞–≤–ª–µ–Ω getValidNumber() ‚Üí —Ç–µ–ø–µ—Ä—å –∫–æ–¥ –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è 3 —Ä–∞–∑–∞.
‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è try-with-resources –≤ main(), —á—Ç–æ–±—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä—ã—Ç—å Scanner.
 */


