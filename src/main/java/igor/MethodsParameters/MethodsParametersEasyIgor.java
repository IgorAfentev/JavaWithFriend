/* –ó–∞–¥–∞–Ω–∏–µ:
    –ù–∞–ø–∏—à–∏—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —á–∏—Å–ª–æ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ –∫–≤–∞–¥—Ä–∞—Ç
 */

//–ú–æ—ë —Ä–µ—à–µ–Ω–∏–µ
package igor.MethodsParameters;
import java.util.Scanner;

public class MethodsParametersEasyIgor {

    public static void main(String[] args) {

        try(Scanner scanner = new Scanner(System.in)) {
            int number = getNumber(scanner);
            System.out.println(number + " –≤ –∫–≤–∞–¥—Ä–∞—Ç–µ —Ä–∞–≤–Ω–æ " + numberSquared(number));
        }
    }

    private static int getNumber(Scanner scanner) {
        System.out.print("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ: ");
        while (!scanner.hasNextInt()) {
            System.out.println("–û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ: ");
            scanner.next();
        }
        return scanner.nextInt();
    }

    static int numberSquared(int number) {
        return number * number;
    }
}

//–†–µ—à–µ–Ω–∏–µ ChatGPT
class MethodsParametersEasyIgorChat {

    public static void main(String[] args) {
        try (Scanner scanner = new Scanner(System.in)) {
            int number = getNumber(scanner);
            System.out.println(number + " –≤ –∫–≤–∞–¥—Ä–∞—Ç–µ —Ä–∞–≤–Ω–æ " + numberSquared(number));
        }
    }

    // –ß–∏—Ç–∞–µ–º —á–∏—Å–ª–æ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –≤–≤–æ–¥–∞
    private static int getNumber(Scanner scanner) {
        System.out.print("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ: ");
        while (!scanner.hasNextInt()) {
            System.out.print("–û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ: ");
            scanner.next(); // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥
        }
        return scanner.nextInt();
    }

    // –ú–µ—Ç–æ–¥ –≤–æ–∑–≤–µ–¥–µ–Ω–∏—è –≤ –∫–≤–∞–¥—Ä–∞—Ç
    static int numberSquared(int number) {
        return number * number; // –ú–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ (int) Math.pow(number, 2)
    }
}

/*
üîπ –í–æ–∑–º–æ–∂–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è:
‚úÖ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç ‚Üí –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Math.pow(number, 2)
 */
