/* –ó–∞–¥–∞–Ω–∏–µ:
    –ù–∞–ø–∏—à–∏—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∏–º—è –∏ –≤—ã–≤–æ–¥–∏—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ ("–ü—Ä–∏–≤–µ—Ç, –∏–º—è!")
 */

//–ú–æ—ë —Ä–µ—à–µ–Ω–∏–µ
package igor.Methods;
import java.util.Scanner;

public class MethodsEasyIgor {

    public static void main(String[] args) {

        Scanner scanner = new Scanner(System.in);

        System.out.print("–í–≤–µ–¥–∏—Ç–µ –∏–º—è: ");
        String name = scanner.nextLine();
        hello(name);

        scanner.close();
    }

    static void hello(String name) {

        System.out.printf("–ü—Ä–∏–≤–µ—Ç, %s!%n", name);
    }
}

//–†–µ—à–µ–Ω–∏–µ ChatGPT
//import java.util.Scanner;

class MethodsEasyIgorChat {

    public static void main(String[] args) {
        try (Scanner scanner = new Scanner(System.in)) { // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ Scanner
            System.out.print("–í–≤–µ–¥–∏—Ç–µ –∏–º—è: ");
            String name = scanner.nextLine();
            hello(name);
        }
    }

    static void hello(String name) {
        System.out.println("–ü—Ä–∏–≤–µ—Ç, " + name + "!");
    }
}

/*
üîπ –í–æ–∑–º–æ–∂–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è:
‚úÖ try-with-resources –¥–ª—è Scanner //–î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è —Å–∫–∞–Ω–µ—Ä–∞ (–ï—Å—Ç—å –∫–æ–Ω—Å–ø–µ–∫—Ç)
 */
