/*–ó–∞–¥–∞–Ω–∏–µ:
    –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —á–∏—Å–ª–æ —á—ë—Ç–Ω—ã–º –∏–ª–∏ –Ω–µ—á—ë—Ç–Ω—ã–º, –∏—Å–ø–æ–ª—å–∑—É—è –æ–ø–µ—Ä–∞—Ç–æ—Ä %
 */

//–ú–æ—ë —Ä–µ—à–µ–Ω–∏–µ
package igor.Operators;
import java.util.Scanner;

public class OperatorsEasy {

    public static void main(String[] args) {

        Scanner scanner = new Scanner(System.in);

        System.out.println("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –µ–≥–æ –Ω–∞ —á—ë—Ç–Ω–æ—Å—Ç—å: ");
        int number = scanner.nextInt();

        if (number % 2 == 0) {
            System.out.println("–ß–∏—Å–ª–æ —á—ë—Ç–Ω–æ–µ");
        } else {
            System.out.println("–ß–∏—Å–ª–æ –Ω–µ—á—ë—Ç–Ω–æ–µ");
        }

        scanner.close();
    }
}

//–†–µ—à–µ–Ω–∏–µ ChatGPT
//import java.util.Scanner;

class OperatorsEasyChat {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –µ–≥–æ –Ω–∞ —á—ë—Ç–Ω–æ—Å—Ç—å: ");
        int number = scanner.nextInt();

        String result = (number % 2 == 0) ? "–ß–∏—Å–ª–æ —á—ë—Ç–Ω–æ–µ" : "–ß–∏—Å–ª–æ –Ω–µ—á—ë—Ç–Ω–æ–µ";
        System.out.println(result);

        scanner.close();
    }
}

/*
üîπ –ß—Ç–æ —É–ª—É—á—à–µ–Ω–æ?
‚úÖ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω —Ç–µ—Ä–Ω–∞—Ä–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä ? : –¥–ª—è –ª–∞–∫–æ–Ω–∏—á–Ω–æ—Å—Ç–∏
‚úÖ System.out.print() –≤–º–µ—Å—Ç–æ println() –¥–ª—è –≤–≤–æ–¥–∞ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
‚úÖ –ö–æ–¥ —Å—Ç–∞–ª –∫–æ—Ä–æ—á–µ –∏ —á–∏—Ç–∞–±–µ–ª—å–Ω–µ–µ
 */